/*
 */

#include "nsISupports.idl"

interface sbILibrary;
interface sbISoundCloudUser;
interface sbISoundCloudListener;

/*
 * \interface sbISoundCloudUser
 * \brief
 */
[scriptable, uuid(48f401c8-1dd2-11b2-8c8e-c9a9274b517a)]
interface sbISoundCloudUser : nsISupports 
{
  readonly attribute AString userid;

  readonly attribute AString realname;

  readonly attribute AString avatar;

  readonly attribute PRint32 followingCount;

  readonly attribute PRint32 incomingCount;

  readonly attribute PRint32 favCount;

  readonly attribute AString city;

  readonly attribute AString country;

  readonly attribute AString profileurl;
};

/*
 * \interface sbISoundCloudService
 * \brief
 */
[scriptable, uuid(dc9d69d0-1dd1-11b2-b9d6-cd32e6338c4d)]
interface sbISoundCloudService : nsISupports 
{
  attribute AString nowPlayingURL;

  readonly attribute AString soundcloudURL;

  readonly attribute sbISoundCloudUser user;

  readonly attribute AString username;

  readonly attribute AString password;

  readonly attribute AString token;

  attribute PRBool userLoggedOut;

  attribute boolean autoLogin;

  attribute boolean loggedIn;

  attribute boolean authorized;

  attribute boolean running;

  readonly attribute sbILibrary library;
  
  readonly attribute sbILibrary dashboard;
  
  readonly attribute sbILibrary favorites;

  readonly attribute sbILibrary downloads;

  readonly attribute AString lastSearch;

  void updateServicePaneNodes();

  boolean shouldAutoLogin();

  void login(in AString aUsername,
             in AString aPassword,
             in boolean aClearSession);

  void logout();

  void cancelLogin();

  void authCallback();

  void updateProfile(in boolean aSavedSession);

  void getTracks(in AString aUser,
                 in AString aQuery,
                 in AString aFlags,
                 in PRint32 aOffset);

  void getDashboard(in AString aCursor);

  void getFavorites();

  void putFavorite(in PRint32 aTrackId);

  void addListener(in sbISoundCloudListener aListener);

  void removeListener(in sbISoundCloudListener aListener);

  void notifyListeners(in AString aEventTrigger);

  void shutdown();
};

/*
 * \interface sbISoundCloudListener
 * \brief
 */
[scriptable, uuid(88657d7e-1dd2-11b2-a624-e043dcf791bb)]
interface sbISoundCloudListener : nsISupports 
{
  void onLoginBegins();

  void onAutoLoginChanged();

  void onLoggedInStateChanged();

  void onProfileUpdated();

  void onSearchTriggered();

  void onTracksAdded();
};
